version: '3.8'

services:
  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - losos-network

  # Backend API
  backend:
    image: registry.digitalocean.com/losos/backend:latest
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - ADMIN_CHAT_ID=${ADMIN_CHAT_ID}
      - POSTGRES_USER=${POSTGRES_USER:-seafood_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-seafood123}
      - POSTGRES_DB=${POSTGRES_DB:-seafood_store}
      - POSTGRES_HOST=host.docker.internal
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - WEB_APP_URL=${WEB_APP_URL}
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL}
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - S3_REGION=${S3_REGION}
      - S3_PUBLIC_URL=${S3_PUBLIC_URL}
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    restart: unless-stopped
    networks:
      - losos-network

  # Telegram Bot
  telegram-bot:
    image: registry.digitalocean.com/losos/telegram-bot:latest
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - WEB_APP_URL=${WEB_APP_URL}
      - BACKEND_API_URL=http://backend:8000/api/v1
      - ADMIN_CHAT_ID=${ADMIN_CHAT_ID}
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - losos-network

  # React Admin Panel
  admin-react:
    image: registry.digitalocean.com/losos/admin-react:latest
    restart: unless-stopped
    networks:
      - losos-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./docker/nginx/nginx-prod.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
      - ./frontend/webapp:/var/www/webapp
    depends_on:
      - admin-react
    restart: unless-stopped
    networks:
      - losos-network

volumes:
  redis_data:

networks:
  losos-network:
    driver: bridge